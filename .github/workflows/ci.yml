name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: pwsh

jobs:
  audit:
    name: Build
    runs-on: windows-2022
    timeout-minutes: 60
    env:
      sonar-available: ${{ secrets.SONAR_TOKEN  != '' && 'true' || 'false' }}
      snyk-available: ${{ secrets.SNYK_TOKEN  != '' && 'true' || 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Build extension artifact
        run: make artifact

      - name: Upload extension artifact
        id: upload-extension-artifact
        uses: actions/upload-artifact@v4
        with:
          name: "extension"
          path: |
            dist/*.zip
          retention-days: 7

      - uses: ./.github/actions/windows-ec2
        with:
          pat-token: ${{ secrets.PAT_TOKEN }}
          artifact-url: "https://api.github.com/repos/steadybit/extension-host-windows/actions/artifacts/${{ steps.upload-extension-artifact.outputs.artifact-id }}/zip"

      - name: Audit
        run: |
          go mod download
          make audit

      - name: Trigger Delete Windows EC2
        uses: the-actions-org/workflow-dispatch@v4
        with:
          workflow: Windows-e2e-delete
          ref: main
          repo: steadybit/infrastructure-live
          token: ${{ secrets.PAT_TOKEN }}


#      - name: "[release] Snyk test"
#        if: ${{ startsWith(github.ref, 'refs/tags/') && env.snyk-available == 'true' }}
#        uses: snyk/actions/golang@master
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#        with:
#          args: --org=${{ vars.SNYK_ORG_ID }} --severity-threshold=high --project-name=${{ github.repository }} --target-reference=${{ github.ref_name }}
#          command: test
#
#      - name: Download e2e coverage files
#        uses: actions/download-artifact@v4
#        with:
#          path: e2e
#          pattern: "e2e-coverage-*"
#          merge-multiple: true
#
#      - name: SonarCloud Scan
#        if: ${{ env.sonar-available == 'true' }}
#        uses: sonarsource/sonarqube-scan-action@v5
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#
#      - name: "[release] SonarCloud Quality Gate check"
#        if: ${{ startsWith(github.ref, 'refs/tags/') && env.sonar-available == 'true' }}
#        uses: sonarsource/sonarqube-quality-gate-action@v1
#        timeout-minutes: 5
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Release
    needs: audit
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: "extension"

      - name: Re-zip files for release
        run: zip -r extension.zip .

      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          draft: true
          prerelease: ${{ needs.build.outputs.is_prerelease == 'true' }}
          fail_on_unmatched_files: true
          files: "*.zip"
