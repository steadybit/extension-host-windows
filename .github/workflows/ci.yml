name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: pwsh

env:
  # Fix slow Go compile and cache restore
  # See https://github.com/actions/setup-go/pull/515
  GOCACHE: D:\gocache
  GOMODCACHE: D:\gomodcache
  GOTMPDIR: D:\gotmp

jobs:
  audit:
    name: Audit
    runs-on: windows-2022
    timeout-minutes: 60
    env:
      sonar_available: ${{ secrets.SONAR_TOKEN  != '' && 'true' || 'false' }}
      snyk_available: ${{ secrets.SNYK_TOKEN  != '' && 'true' || 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Go requires gotmp to be present
      - run: mkdir D:\gotmp
        shell: pwsh

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Set dependency versions
        id: versions
        run: echo "STEADYBIT_WINDIVERT_VERSION=$(grep STEADYBIT_WINDIVERT_VERSION versions.txt | cut -d= -f2)" >> GITHUB_ENV

      - name: Audit
        run: |
          go mod download
          make audit
        shell: powershell

      - name: SonarCloud Scan
        if: ${{ env.sonar_available == 'true' }}
        uses: sonarsource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: "[release] SonarCloud Quality Gate check"
        if: ${{ startsWith(github.ref, 'refs/tags/') && env.sonar_available == 'true' }}
        uses: sonarsource/sonarqube-quality-gate-action@v1
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build & Release
    needs: audit
    runs-on: windows-2022
    outputs:
      artifact-id: ${{ steps.artifact-upload.outputs.artifact-id }}
      artifact-digest: ${{ steps.artifact-upload.outputs.artifact-digest }}
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Go requires gotmp to be present
      - run: mkdir D:\gotmp
        shell: pwsh

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Set dependency versions
        id: versions
        run: echo "STEADYBIT_WINDIVERT_VERSION=$(grep STEADYBIT_WINDIVERT_VERSION versions.txt | cut -d= -f2)" >> GITHUB_ENV

      - name: Build extension installer
        run: make installer
        shell: powershell

      - name: Upload Artifacts
        id: artifact-upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.head_ref || github.ref_name }}
          path: |
            dist/*.zip
            dist/*.msi
          retention-days: 7

      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          draft: true
          prerelease: ${{ !contains(github.ref, '-') }}
          fail_on_unmatched_files: true
          files: "dist/*.zip"

  upload-to-s3:
    needs: build
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: 'eu-central-1'
          role-to-assume: 'arn:aws:iam::292929100161:role/allow-auto-deploy-from-other-accounts'
          role-duration-seconds: 900
          role-session-name: S3DeployWindowsArtifacts

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "${{ github.head_ref || github.ref_name }}"
          path: artifact/

      - name: Zip artifact
        shell: bash
        run: |
          ARTIFACT_NAME="${{ github.head_ref || github.ref_name }}"
          zip $ARTIFACT_NAME.zip artifact/*.msi
          zip latest.zip artifact/*.msi
        
      - name: Upload to S3
        shell: bash
        run: |
          ARTIFACT_NAME="${{ github.head_ref || github.ref_name }}"
          ARTIFACT_DIGEST="${{ needs.build.outputs.artifact-digest }}"
          echo $ARTIFACT_DIGEST > digest.sha256
          aws s3 cp digest.sha256 "s3://windows-registry.steadybit.com/steadybit-extension-host-windows/latest.sha256"
          aws s3 cp latest.zip "s3://windows-registry.steadybit.com/steadybit-extension-host-windows/"
          aws s3 cp "$ARTIFACT_NAME.zip" "s3://windows-registry.steadybit.com/steadybit-extension-host-windows/"
          aws s3 cp digest.sha256 "s3://windows-registry.steadybit.com/steadybit-extension-host-windows/$ARTIFACT_NAME.sha256"


  refresh-demo:
    name: Refresh Dev Demo
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Trigger Update EC2 Windows Demo
        env:
          ARTIFACT_ID: ${{needs.build.outputs.artifact-id}}
        uses: the-actions-org/workflow-dispatch@v4
        with:
          workflow: Windows-demo-deploy
          ref: main
          repo: steadybit/infrastructure-live
          inputs: >-
            {
              "artifact_id": "${{ env.ARTIFACT_ID }}"
            }
          token: ${{ secrets.PAT_TOKEN }}

  refresh-prod:
    name: Refresh Prod Demo
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: [build, refresh-demo]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Trigger Update Prod EC2 Windows Demo
        env:
          ARTIFACT_ID: ${{needs.build.outputs.artifact-id}}
        uses: the-actions-org/workflow-dispatch@v4
        with:
          workflow: Windows-prod-demo-deploy
          ref: main
          repo: steadybit/infrastructure-live
          inputs: >-
            {
              "prod_artifact_id": "${{ env.ARTIFACT_ID }}"
            }
          token: ${{ secrets.PAT_TOKEN }}
